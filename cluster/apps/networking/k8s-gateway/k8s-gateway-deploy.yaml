---
# Source: k8s-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-gateway
  labels:
    helm.sh/chart: k8s-gateway-1.0.10
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8s-gateway/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-gateway
  labels:
    helm.sh/chart: k8s-gateway-1.0.10
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
data:
  Corefile: |-
    .:1053 {
        errors
        log
        health {
            lameduck 5s
        }
        ready
        k8s_gateway "scheuk.com" {
          apex k8s-gateway.default
          ttl 300
          fallthrough
        }
        forward . tls://1.1.1.1 tls://1.0.0.1 {
          tls_servername cloudflare-dns.com
        }
        prometheus 0.0.0.0:9153
        loop
        reload
        loadbalance
    }
---
# Source: k8s-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-gateway
  labels:
    helm.sh/chart: k8s-gateway-1.0.10
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - list
      - watch
---
# Source: k8s-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-gateway
  labels:
    helm.sh/chart: k8s-gateway-1.0.10
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-gateway
subjects:
  - kind: ServiceAccount
    name: k8s-gateway
    namespace: default
---
# Source: k8s-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: k8s-gateway
  labels:
    helm.sh/chart: k8s-gateway-1.0.10
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
spec:
  selector:
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
  type: LoadBalancer
  loadBalancerIP: 192.168.1.20
  ports:
    - port: 53
      protocol: UDP
      name: dns-udp
      targetPort: dns-udp
  externalTrafficPolicy: Local
---
# Source: k8s-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-gateway
  labels:
    helm.sh/chart: k8s-gateway-1.0.10
    app.kubernetes.io/name: k8s-gateway
    app.kubernetes.io/instance: k8s-gateway
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-gateway
      app.kubernetes.io/instance: k8s-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-gateway
        app.kubernetes.io/instance: k8s-gateway
    spec:
      serviceAccountName: k8s-gateway
      containers:
        - name: k8s-gateway
          image: "quay.io/oriedge/k8s_gateway:v0.3.1"
          imagePullPolicy: IfNotPresent
          args: ["-conf", "/etc/coredns/Corefile"]
          securityContext:
            runAsUser: 1000
          volumeMounts:
            - name: config-volume
              mountPath: /etc/coredns
          resources: {}
          ports:
            - {containerPort: 1053, protocol: UDP, name: dns-udp}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
      volumes:
        - name: config-volume
          configMap:
            name: k8s-gateway
            items:
              - key: Corefile
                path: Corefile
